// Generated by Selenium IDE

import org.junit.jupiter.api.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;

import java.util.*;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;


public class GetDataTests {

    private WebDriver driver;
    JavascriptExecutor js;


    @BeforeEach
    public void setUp() {
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;

        // Test name: test_choose_type_appear_hours
        // Step # | name | target | value | comment
        // 1 | open | / |  |
        driver.get("http://localhost:5000/");

        // 2 | setWindowSize | 1920x1033 |  |
        driver.manage().window().setSize(new Dimension(1920, 1033));
    }

    @AfterEach
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void testGetCurrentData() {

        // set coordinates on the web page
        chooseCoordinates();

        // 7 | click | id=get_btn |  |
        driver.findElement(By.id("get_btn")).click();

        checkResponse("Current", 1);
    }

    @Test
    public void testGetForecastData() {

        int hours = 3;


        // set coordinates on the web page
        chooseCoordinates();

        // set the forecast type and the number of hours
        setTypeAndHours("forecast", hours);

        // 10 | click | id=get_btn |  |
        driver.findElement(By.id("get_btn")).click();

        checkResponse("Forecast", hours);
    }

    @Test
    public void testGetHistoryData() {

        int hours = 3;


        // set coordinates on the web page
        chooseCoordinates();

        // set the forecast type and the number of hours
        setTypeAndHours("history", hours);

        // 10 | click | id=get_btn |  |
        driver.findElement(By.id("get_btn")).click();

        checkResponse("History", hours);
    }

    private void chooseCoordinates() {

        // 3 | click | id=latitude |  |
        driver.findElement(By.id("latitude")).click();

        // 4 | type | id=latitude | 39.160489 |
        driver.findElement(By.id("latitude")).sendKeys("39.160489");

        // 5 | click | id=longitude |  |
        driver.findElement(By.id("longitude")).click();

        // 6 | type | id=longitude | 8.548239 |
        driver.findElement(By.id("longitude")).sendKeys("8.548239");
    }

    private void setTypeAndHours(String type, int hours) {

        // 7 | select | id=type | value=forecast |
        WebElement dropdown = driver.findElement(By.id("type"));
        dropdown.findElement(By.cssSelector("*[value='" + type + "']")).click();

        // 8 | click | id=hours |  |
        driver.findElement(By.id("hours")).click();

        // 9 | type | id=hours | 3 |
        driver.findElement(By.id("hours")).sendKeys(String.valueOf(hours));
    }

    private void checkResponse(String title, int numberResponses) {

        // * | assertText | id=title | $title |
        assertThat(driver.findElement(By.id("title")).getText(), is(title));

        // * | assertElementPresent | css=.air_quality |  |
        List<WebElement> elements = driver.findElements(By.cssSelector(".air_quality"));
        assert(elements.size() == numberResponses);

        // * | assertElementPresent | css=.air_pollutants |  |
        elements = driver.findElements(By.cssSelector(".air_pollutants"));
        assert(elements.size() == numberResponses);
    }
}
